// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

model Post {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String?
  published Boolean @default(false)
  author    User?   @relation(fields: [authorId], references: [id])
  authorId  String  @db.ObjectId
}

model User {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  email String  @unique
  name  String?
  posts Post[]
}

model Drive {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  name    String    @unique
  url     String
  Project Project[]
}

model Project {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  name            String      @unique
  acronym         String?
  description     String?
  ecotaxa         Ecotaxa?    @relation(fields: [ecotaxaId], references: [id])
  // sample      Int       @default(0)
  // scan        Int       @default(0)
  samples         Sample[]
  // metadata    Metadata  @relation(fields: [metadataId], references: [id])
  // metadata    Metadata  @relation(fields: [metadataId], references: [id])
  ecotaxaId       String?     @db.ObjectId
  // metadataId  String    @db.ObjectId
  updatedAt       DateTime?   @updatedAt
  createdAt       DateTime    @default(now())
  // qcState     QCState   @relation(fields: [qCStateId], references: [id])
  // qCStateId   String    @db.ObjectId
  drive           Drive       @relation(fields: [driveId], references: [id])
  driveId         String      @db.ObjectId
  // QCState     QCState?  @relation(fields: [qCStateId], references: [id])
  // qCStateId   String?   @db.ObjectId
  // SampleView   SampleView[]
  instrument      Instrument? @relation(fields: [instrumentId], references: [id])
  instrumentId    String?     @db.ObjectId
  scanningOptions String?
}

model Instrument {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  sn      String // Serial Number
  // options ScanningOption
  Project Project[]
}

model ScanningOption {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  density Int
}

model QCState {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  validated     DateTime
  state         QCStateItem @relation(fields: [qCStateItemId], references: [id])
  // Project       Project[]
  qCStateItemId String      @db.ObjectId
}

model QCStateItem {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  name    String    @default("None")
  QCState QCState[]
}

model Ecotaxa {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  project Int
  Project Project[]
}

// view SampleView {
//   id              String         @id @default(auto()) @map("_id") @db.ObjectId
//   name            String
//   subsample       SubSample[]
//   Project         Project        @relation(fields: [projectId], references: [id])
//   projectId       String         @db.ObjectId
//   metadata        Metadata[]
//   metadataModel   MetadataModel? @relation(fields: [metadataModelId], references: [id])
//   metadataModelId String?        @db.ObjectId
//   sampleCount     Int
//   createdAt       DateTime
//   updatedAt       DateTime
// }

model Sample {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  name            String         @unique
  subsample       SubSample[]
  // scans          Scan[]
  // metadata   Metadata    @relation(fields: [metadataId], references: [id])
  Project         Project        @relation(fields: [projectId], references: [id])
  projectId       String         @db.ObjectId
  // metadataId String      @db.ObjectId
  metadata        Metadata[]
  metadataModel   MetadataModel? @relation(fields: [metadataModelId], references: [id])
  metadataModelId String?        @db.ObjectId
}

model SubSample {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  scans     Scan[]
  updatedAt DateTime? @updatedAt
  createdAt DateTime  @default(now())
  // metadata   Metadata @relation(fields: [metadataId], references: [id])
  Sample    Sample?   @relation(fields: [sampleId], references: [id])
  sampleId  String?   @db.ObjectId
  // metadataId String  @db.ObjectId
  // SampleView   SampleView? @relation(fields: [sampleViewId], references: [id])
  // sampleViewId String?     @db.ObjectId
}

// model Metadata {
//   id                  String             @id @default(auto()) @map("_id") @db.ObjectId
//   project             MetadataProject?   @relation(fields: [metadataProjectId], references: [id])
//   sample              MetadataSample?    @relation(fields: [metadataSampleId], references: [id])
//   subsample           MetadataSubSample? @relation(fields: [metadataSubSampleId], references: [id])
//   Project             Project[]
//   Sample              Sample[]
//   SubSample           SubSample[]
//   metadataProjectId   String?            @db.ObjectId
//   metadataSampleId    String?            @db.ObjectId
//   metadataSubSampleId String?            @db.ObjectId
// }
// model Metadata {
//   id   String @id @default(auto()) @map("_id") @db.ObjectId
//   uri  String
//   type String
// }

model Metadata {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  type     String
  value    String
  sample   Sample? @relation(fields: [sampleId], references: [id])
  sampleId String? @db.ObjectId
  // SampleView   SampleView? @relation(fields: [sampleViewId], references: [id])
  // sampleViewId String?     @db.ObjectId
}

model MetadataModel {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  description String?
  value       String   @unique
  sample      Sample[]
  // SampleView  SampleView[]
}

// model MetadataProject {
//   id String @id @default(auto()) @map("_id") @db.ObjectId

//   Metadata Metadata[]
// }

// model MetadataSample {
//   id String @id @default(auto()) @map("_id") @db.ObjectId

//   Metadata Metadata[]
// }

// model MetadataSubSample {
//   id String @id @default(auto()) @map("_id") @db.ObjectId

//   Metadata Metadata[]
// }

model Scan {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  url         String
  background  Boolean?
  // Sample      Sample?    @relation(fields: [sampleId], references: [id])
  // sampleId    String?    @db.ObjectId
  SubSample   SubSample? @relation(fields: [subSampleId], references: [id])
  subSampleId String?    @db.ObjectId
}
